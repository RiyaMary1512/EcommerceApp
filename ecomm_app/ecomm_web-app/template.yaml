AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ecomm_web-app

  Sample SAM Template for ecomm_web-app

Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

Resources:
  ProductDataTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 'ProductDataTable'
      AttributeDefinitions:
        - AttributeName: 'product_id'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'product_id'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  EcommDataStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: 'ecommdatastream'
      ShardCount: 1

  EcommAppFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ecomm_app/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Events:
        KinesisEvent:
          Type: Kinesis
          Properties:
            Stream: !GetAtt EcommDataStream.Arn
            StartingPosition: TRIM_HORIZON
            BatchSize: 100
      Policies:
        - AmazonKinesisFullAccess
        - AmazonDynamoDBFullAccess

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'DynamoDBAccessPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'dynamodb:PutItem'
                  - 'dynamodb:UpdateItem'
                  - 'dynamodb:GetItem'
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ProductDataTable'
        - PolicyName: 'KinesisAccessPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'kinesis:DescribeStream'
                  - 'kinesis:GetRecords'
                  - 'kinesis:GetShardIterator'
                  - 'kinesis:PutRecord'
                  - 'kinesis:PutRecords'
                Resource: !Sub 'arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/ecommdatastream'

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  EcommAppFunction:
    Description: Ecomm App Lambda Function ARN
    Value: !GetAtt EcommAppFunction.Arn
  EcommAppFunctionIamRole:
    Description: Implicit IAM Role created for Ecomm App function
    Value: !GetAtt EcommAppFunctionRole.Arn
